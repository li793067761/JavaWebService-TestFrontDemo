<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
   	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd" default-lazy-init="true">


	<!-- <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
        使用下面配置的缓存管理器
        <property name="cacheManager" ref="cacheManager"/>
    </bean>
    
    配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        调用我们配置的权限管理器
        <property name="securityManager" ref="securityManager"/>
        配置我们的登录请求地址
        <property name="loginUrl" value="/login.html"/>
        配置我们在登录页登录成功后的跳转地址，如果你访问的是非/login地址，则跳到您访问的地址
        <property name="successUrl" value="/user.html"/>
        如果您请求的资源不再您的权限范围，则跳转到/403请求地址
        <property name="unauthorizedUrl" value="/403.html"/>
        权限配置
       	 <property name="filterChainDefinitionMap" ref="chainDefinitionSectionMetaSource"/>
        Shiro连接约束配置,即过滤链的定义  
	    此处可配合我的这篇文章来理解各个过滤连的作用http://blog.csdn.net/jadyer/article/details/12172839  
	    下面value值的第一个'/'代表的路径是相对于HttpServletRequest.getContextPath()的值来的  
	    anon：它对应的过滤器里面是空的,什么都没做,这里.do和.jsp后面的*表示参数,比方说login.jsp?main这种  
	    authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter  
       <property name="filterChainDefinitions">
           <value>
               /static/** = anon
               /guest/** = anon
               /front/logout = logout
               /** = authc
           </value>
       </property>
    </bean>
    自定义Realm
    <bean id="myRealm" class="com.chales.dos.security.shiro.MyRealm"/>
	shiro缓存管理器
    <bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/> -->
</beans>